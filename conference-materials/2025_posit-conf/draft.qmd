---
title: "Death by Dropdown? Engineer Insightful Shiny Apps with Behavioral Science"
author: "Jeremy Winget, PhD"
execute:
  echo: true
format:
  revealjs:
    theme: default
    slide-number: true
    transition: fade
---

## The Problem {.center background-color="#4682b4"}

::: {.large}
**Ever open a dashboard, see 18 filters across 6 tabs, and then...close your laptop?**
:::

::: {.fragment .large}
**Or just get the urge to...**

<div class="tenor-gif-embed" data-postid="17038619" data-share-method="host" data-aspect-ratio="1.77778" data-width="100%"><a href="https://tenor.com/view/ron-swanson-parks-and-recreation-parks-and-rec-computer-dumpster-gif-17038619">Ron Swanson Parks And Recreation GIF</a>from <a href="https://tenor.com/search/ron+swanson-gifs">Ron Swanson GIFs</a></div> <script type="text/javascript" async src="https://tenor.com/embed.js"></script>
:::

::: {.notes}
:::

## Quick Show of Hands üôã {.center background-color="#34495e"}

::: {.incremental}
- Who's built a Shiny app with 10+ filters?
- Who's had a user ask for "just one more dropdown"?
- Who's dashboard has more `selectInput()` than actual insights?
:::

::: {.fragment}
**Welcome to my impromptu Dashboard Support Group. You're among friends.** üòÖ
:::

::: {.notes}
- Confession time...
- Who's built a one of those dashboards? ...me
- Who's been forced to build one bc the client just kept asking for one more filter? ...me
- Who's ever used selectInput more than they probably should have? ...me
- You're not alone!
:::

## Why Me? {background-color="#2c3e50"}

:::: {.columns}
::: {.column width="60%"}
### Applied Social Psychologist ‚Üí Full-Stack Engineer

- **PhD in Applied Psychology** studying how people process information
- **Led Shiny teams** at scale, providing enterprise dashboards
- **Core insight:** Most dashboard failures aren't technical, they're psychological
:::

::: {.column width="40%"}
::: {.fragment}
*"As a behavioral scientist in the tech world, I've seen firsthand how a dash of psychology can rescue users from that feeling of **'death by dropdown'"***
:::
:::
::::

## Your Dashboard = A Road Trip üöó {.center}

:::: {.columns}
::: {.column width="50%"}
### You wouldn't make a long drive without:
- **I**nterpreting travel guides
- **N**oticing any mechanical problems
- **A**nticipating roadblocks ahead
- **S**tructuring the best route
- **V**alidating everyone arrived happy
:::

::: {.column width="50%"}
::: {.fragment}
### So why build dashboards without:
- **I**nterpreting user needs
- **N**oticing friction points
- **A**nticipating behavior
- **S**tructuring a journey
- **V**alidating understanding
:::
:::
::::

::: {.notes}
- 20 seconds
- "This is the BID framework"
- Transition: "Let me show you the GPS"
:::

## The BID Framework: Your GPS for Dashboard Design

![](img/bid-framework.png)

**Remember - "Interfaces Need A Smart Vision"**

::: {.fragment}
**Behavioral Insight Design (BID)**: *Not just UX advice - it's behavioral science in your dev workflow*
:::

::: {.notes}
- 30-45 seconds MAX
- "Today we focus on the middle three - where psychology transforms dashboards"
- Quick transition to stages
:::

## BEFORE: A Familiar Nightmare

![](img/before-overload.png)

::: {.incremental}
- 18 filters ‚Ä¢ 6 tabs ‚Ä¢ no story ‚Ä¢ all data
- **User reaction:** "Where do I even start?"
- **Result:** 65% abandon rate in first 30 seconds
:::

## Every Dev's First Dashboard

![](img/this-is-fine.jpg)<br>
*"But it has ALL the features!"*

## INTERPRET: Plan Your Destination üó∫Ô∏è {background-color="#4682b4"}

```{r}
#| eval: false

library(bidux)

# Define your destination and purpose
interpret_stage <- bid_interpret(
  central_question = "Are we on track this quarter?",
  data_story = list(
    hook = "Q3 performance exceeds targets by 15%",
    context = "Following our new product launch",
    tension = "However, churn increased 8% in enterprise segment",
    resolution = "Focus retention efforts on high-value accounts"
  ),
  user_personas = list(
    primary = "Product managers checking weekly KPIs",
    secondary = "Executives reviewing quarterly trends"
  )
)

# Quick destination check - devs often skip this
bid_interpret(
  central_question = "Are we on track this quarter?",
  user_persona = "PM checking weekly KPIs"  # ‚Üê Most forget this
)
```

::: {.fragment}
**Key insight:** If you can't write the question in 10 words, users won't find answers in 100 filters
:::

::: {.notes}
- 1.5 minutes TOTAL for Interpret
- "You think you do this, but telemetry says otherwise"
- "Most jump straight to filters"
- Transition: "But here's what you're missing..."
:::

## NOTICE: The Warning Lights You're Ignoring ‚ö†Ô∏è {background-color="#e74c3c"}

![](img/telemetry-heatmap.png)

::: {.incremental}
- **Your assumption:** "They need all 18 filters"
- **Reality:** 82% use only 3 filters
- **Hidden cost:** 4.3 minutes to first click
:::

::: {.notes}
- START 3-minute NOTICE section
- "This is where behavioral science starts"
:::

## NOTICE: What Telemetry Reveals

```{r}
#| eval: false

# Actual production telemetry
notice_results <- bid_notice(telemetry_data = TRUE)

summary(notice_results)
```

::: {.fragment}
**The "Just One More Filter" Death Spiral:**

![](img/anakin.jpg)
:::

::: {.notes}
- "Telemetry is your behavioral microscope"
- "Every hover tells a story of confusion"
- Transition: "Now let's talk about what happens in their heads"
:::

## NOTICE: Cognitive Load Measurement

:::: {.columns}
::: {.column width="50%"}
### You're Measuring:
- Click-through rates
- Time on page
- Completions
:::

::: {.column width="50%"}
### You Should Measure:
- **Decision fatigue points**
- **Paradox of choice moments**
- **Cognitive overflow indicators**
:::
::::

```{r}
#| eval: false

# update example based on actual bidux code
```

::: {.notes}
- "This is behavioral science in action"
- End NOTICE section (3 min total)
- Transition: "Once you spot problems, anticipate how users will cope"
:::

## ANTICIPATE: Pack for Cognitive Weather üå¶Ô∏è {background-color="#f39c12"}

::: {.large}
**Users don't see data. They see stories.**
:::

![](https://media.giphy.com/media/l0IykOsxLECVejOzm/giphy.gif)<br>
*Users interpreting your carefully crafted visualizations*

::: {.fragment}
*And they'll write their own story if you don't guide them*
:::

::: {.notes}
- START 3-minute ANTICIPATE section
- "This is pure psychology"
- So we need to prepare for cognitive detours
:::

## ANTICIPATE: The Biases You're Not Defending Against

:::: {.columns}
::: {.column width="50%"}
### Anchoring Bias
```{r}
#| eval: false

# Bad: First number sticks
valueBox(value = -5, subtitle = "Change")

# Good: Context first
valueBox(value = "+15% YTD", subtitle = "Despite -5 this week")
```
:::

::: {.column width="50%"}
### Framing Effects
```{r}
#| eval: false

# bidux suggests toggle
bid_anticipate() |>
  add_framing_toggle(
    positive = "75% to goal",
    negative = "25% gap remaining"
  )
```
:::
::::

::: {.notes}
- "Small changes, massive perception shifts"
- "This is what behavioral scientists know that devs don't"
:::

## ANTICIPATE: Confirmation Bias Protection

![](img/confirmation-bias-toggle.png)

```{r}
#| eval: false

# update with actual bidux code and set eval to TRUE
```

::: {.fragment}
**Result:** 74% reduction in misinterpretation
:::

::: {.notes}
- "Protect users from themselves"
- End ANTICIPATE (3 min total)
- Transition: "Now structure the journey"
:::

## STRUCTURE: The Scenic Route üõ£Ô∏è {background-color="#16a085"}

![](img/oprah.jpg)

::: {.fragment}
**If everything's important, nothing is.**
:::

::: {.notes}
- START 3.5-minute STRUCTURE section
- "This is where psychology meets code"
:::

## STRUCTURE: Progressive Disclosure That Works

:::: {.columns}
::: {.column width="50%"}
### Before: Chaos
![](img/before-overload.png)

- All options visible
- Competing for attention
- Analysis paralysis
:::

::: {.column width="50%"}
### After: Journey
![](img/after-structured.png)

- Start with one question
- Reveal complexity gradually
- Cognitive scaffolding
:::
::::

::: {.notes}
- "Structure IS the user experience"
- "Every pixel placement is a psychological choice"
:::

## STRUCTURE: The Behavioral Science Hierarchy

```{r}
#| eval: false

# update with actual bidux code and set eval to TRUE
```

::: {.fragment}
### The F-Pattern Reading Path
![](img/f-pattern-heatmap.png)

*Place critical info where eyes naturally go*
:::

::: {.notes}
- "Eye tracking shows F-pattern on dashboards"
- "Top-left = highest value real estate"
:::

## STRUCTURE: Smart Defaults from Telemetry

```{r}
#| eval: false

# update with actual bidux code and set eval to TRUE
```

::: {.fragment}
**Before:** User configures dashboard<br>
**After:** Dashboard anticipates user
:::

::: {.notes}
- End STRUCTURE (3.5 min total)
- Transition: "Quick validation check"
:::

## VALIDATE: Confirm Safe Arrival ‚úÖ {background-color="#27ae60"}

```{r}
#| eval: false

# update with actual bidux code and set eval to TRUE
```

::: {.fragment}
![](img/validate-summary.png)

**The GPS moment:** "You've arrived at your insight"
:::

::: {.notes}
- 1.5 minutes TOTAL for Validate
- "Devs know summaries, but miss the psychology"
- "Plain language = cognitive relief"
- Transition: "Let's see the impact"
:::

## The Transformation: Proven Results üìä

:::: {.columns}
::: {.column width="50%"}
### Before BID
- 18 filters, 6 tabs
- 4.3 min to insight
- 65% abandonment
- 31% misinterpret data
:::

::: {.column width="50%"}
### After BID
- 3 smart filters
- 45 sec to insight (-82%)
- 85% completion (+143%)
- 8% misinterpret (-74%)
:::
::::

::: {.fragment}
### One Team's Story:
*"We thought users wanted more options. Telemetry showed they wanted more guidance. BID framework + {bidux} = 224% increase in weekly active users"*
:::

::: {.notes}
- 1.5 minutes for results
- "This isn't theory - it's production data"
- Transition: "Here's how to start"
:::

## Your Roadmap Forward üöÄ {.center background-color="#2c3e50"}

::: {.r-fit-text}
**"Interfaces Need A Smart Vision"**
:::

### This Week's Challenge:

1. **Install {bidux}:** `install.packages("bidux")`
2. **Run telemetry on ONE dashboard:** `bid_notice(telemetry = TRUE)`
3. **Share your before/after:** [@jrwinget](https://bsky.app/profile/jrwinget.bsky.social)

::: {.fragment}
**üéÅ First 5 transformations get free 1:1 dashboard review!**

![QR for contact](img/qr-combined.png)
:::

::: {.notes}
- 1 minute close
- "No more death by dropdown!"
- "Questions?"
- Thank organizers if time
:::

## Bonus Slide: The {bidux} Toolkit {.smaller}

```{r}
#| eval: false

# For those who want to dive deep
library(bidux)

# Full workflow in 5 lines
my_dashboard |>
  bid_interpret(question = "What's our KPI status?") |>
  bid_notice(telemetry = TRUE) |>
  bid_anticipate(guard_biases = TRUE) |>
  bid_structure(progressive = TRUE) |>
  bid_validate(empower_users = TRUE)

# Generate full behavioral report
bid_report(my_dashboard, output = "behavioral_insights.html")
```

::: {.notes}
- Only if extra time in Q&A
- "Full framework in your console"
:::

## Bonus: Quick Reference Card

| Stage | Problem | Solution | {bidux} Function |
|-------|---------|----------|------------------|
| **I**nterpret | No clear question | Define destination | `bid_interpret()` |
| **N**otice | Hidden friction | Telemetry reveals | `bid_notice()` |
| **A**nticipate | Cognitive biases | Guard rails | `bid_anticipate()` |
| **S**tructure | Chaos overwhelms | Progressive disclosure | `bid_structure()` |
| **V**alidate | Unclear outcomes | Plain language | `bid_validate()` |

::: {.notes}
- Only show if someone asks for summary
- "Email me for full guide"
:::
