---
title: "Death By Dropdown?"
subtitle: "A Developer's Guide To Building Dashboards That Won't Fry Your Client's Brain"
author: "Milena Eickhoff & Jeremy Winget, PhD"
format: 
  revealjs:
    theme: simple
    slide-number: true
    footer: "ShinyConf 2025 | The BID Framework"
    incremental: true
    transition: slide
    background-transition: fade
    highlight-style: github
    code-block-background: true
---

## The Problem {.center background-color="#4682B4"}

:::: {.columns}
::: {.column width="60%"}
<h3>Ever felt like this?</h3>

- Endless dropdown menus
- Overwhelming complexity
- Users disengaged
- Delayed decision-making
- "Dashboard rot"
:::

::: {.column width="40%"}
![](https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExbzVhM3d3MjJvYTNyc3puM2E0cmduZjFweXhrczNwcXI0b3FhN203aCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/l44Q5OXJ6qaNr838Q/giphy.gif)
:::
::::

## It Doesn't Have To Be This Way {.center}

<br>

::: {.r-fit-text}
By shifting the focus from <span style="color:#D55E00">**cramming data**</span> to <span style="color:#009E73">**crafting stories**</span>
:::

::: {.fragment}

<br>

::: {.r-fit-text}
We can guide users effortlessly to insights
:::
:::

## The BID Framework {background-color="#E6F0FF"}

::: {.r-fit-text}
A 5-Stage Behavior Insight Design Framework
:::

::: {.column width="60%"}
::: {.nonincremental}
1. **Notice** the Problem
2. **Interpret** the User's Need
3. **Structure** the Dashboard
4. **Anticipate** User Behavior
5. **Validate** & Empower the User
:::
::: 

::: {.column width="40%"}
![The BID Framework](The_BID_framework.png)
:::

::: {.notes}
- This framework distills psychological principles into actionable steps
- Each stage builds on the previous one
- The framework is grounded in behavioral science, communication theory, and UX design
:::

## Where BID Fits In {background-color="#F0F0F0"}

::: {.nonincremental}
- Builds on established UX heuristics and theories
- Incorporates data storytelling frameworks
- Systematically integrates cognitive bias mitigation
- Cross-disciplinary synthesis (UX, data viz, behavioral economics)
- Stage-based process rather than heuristic lists
- Specifically tailored for analytics dashboards
:::

## Real-World Patterns, Not Just Theory {.center background-color="#FFFFFF"}

::: {.columns}
::: {.column width="50%"}
### Before BID:
- Information overload
- No clear story
- Cognitive friction
- Unused features
- Unclear next steps
:::

::: {.column width="50%"}
### After BID:
- Focused on key user needs
- Clear narrative structure
- Reduced cognitive load
- Bias-aware design
- Actionable insights
:::
::::

::: {.fragment}
### The outcome:
Users make faster, better decisions with less cognitive effort
:::

## BID In Action {.center background-color="#F0F0F0"}

::: {.r-fit-text}
**Screenshots**: Before & After applying BID framework across stages
:::

> _(placeholder for visual comparison of UI examples)_

## Implementation Demo {.center background-color="#F9F9F9"}

::: {.r-fit-text}
Hands-on example using `{reactable}` to implement Stages 1â€“3
:::

::: {.r-stack}
![Example Stages 1-3](Screenshot_examples_main_1.png){width="50%"}

![Example Stages 1-3](Screenshot_examples_main_2.png){.fragment width="50%"}

![Example Stages 1-3](Screenshot_examples_main_3.png){.fragment width="50%"}

![Example Stages 1-3](Screenshot_examples_main_4.png){.fragment width="50%"}
:::

## Implementation Demo {.scrollable background-color="#F9F9F9"}

::: {.r-fit-text}
Hands-on example using `{reactable}` to implement Stages 1â€“3
:::

![Example Stages 1-3](code_example_bar_graph_full.png){height="100%"}

## Implementation Demo {.center background-color="#F9F9F9"}

::: {.r-fit-text}
Hands-on example using `{echarts4r}` to implement Stages 4 & 5
:::

::: {.r-stack}
![Example Stages 4 & 5](Screenshot_examples_Deep_Dives_1.png){width="50%"}

![Example Stages 4 & 5](Screenshot_examples_Deep_Dives_2.png){.fragment width="50%"}

![Example Stages 4 & 5](Screenshot_examples_Deep_Dives_3.png){.fragment width="50%"}
:::

## Implementation Demo {.center background-color="#F9F9F9"}

::: {.r-fit-text}
Hands-on example using `{echarts4r}` to implement Stages 4&5
:::

> Placeholder for code example

## From Framework to Workflow {.center background-color="#E6F0FF"}

::: {.r-fit-text}
Meet `{bidux}`: Your BID Assistant for Shiny
:::

- ðŸ§  Five structured helpers: `bid_notice()` to `bid_validate()`
- ðŸ“š Concept browser: `bid_concept("processing_fluency")`
- ðŸ“„ Built-in documentation + report generation
- ðŸ”Œ Works with `{rhino}` and your existing apps

> _(placeholder screenshot: console usage or UI screen of `{bidux}` helpers)_

## What bidux Looks Like {.background-color="#F9F9F9"}

```r
library(bidux)

ui <- fluidPage(
  bid_structure(
    layout = "dual_process",
    concepts = c("default_effect", "principle_of_proximity")
  )
)

ui <- bid_anticipate(
  ui,
  bias_mitigations = list(
    anchoring = bid_components$context_aware_reference("sales_baseline"),
    framing = bid_components$framing_toggle("performance_view", "Progress", "Gap")
  )
)
```

::: {.fragment}
More at: [github.com/bidux](https://github.com)
:::

## Key Takeaways {.center background-color="#4682B4"}

::: {.nonincremental}
1. **BID** helps reduce friction and improve decisions
2. **Reactable + echarts4r** bring BID to life
3. **`bidux`** supports you in applying BID at every stage
4. Build dashboards that guide â€” not overwhelm â€” your users
:::

## Thank You! {.center background-color="#4682B4"}

::: {.r-fit-text}
Questions?
:::

Milena Eickhoff & Jeremy Winget, PhD  
