---
title: "Death By Dropdown?"
subtitle: "A Developer's Guide To Building Dashboards That Won't Fry Your Client's Brain"
author: "Milena Eickhoff & Jeremy Winget, PhD"
format: 
  revealjs:
    theme: simple
    slide-number: true
    footer: "ShinyConf 2025 | The BID Framework"
    incremental: true
    transition: slide
    background-transition: fade
    highlight-style: github
    code-block-background: true
---

## The Problem {.center background-color="#4682b4"}

:::: {.columns}
::: {.column .nonincremental width="60%"}
<h3>Ever felt like this?</h3>

- Endless dropdown menus
- Overwhelming complexity
- Users disengaged
- Delayed decision-making
- "Dashboard rot"
:::

::: {.column width="40%"}
![](https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExbzVhM3d3MjJvYTNyc3puM2E0cmduZjFweXhrczNwcXI0b3FhN203aCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/l44Q5OXJ6qaNr838Q/giphy.gif)
:::
::::

::: {.notes}
**Opening Hook**: Begin with energy! Make eye contact across the room.

- Start by acknowledging the shared pain point everyone recognizes
- Emphasize the emotional response users have when facing cluttered dashboards
- Mention that this is costing organizations real money through delayed decisions
- "Dashboard rot" = dashboards that get built but never used
- Ask for a show of hands: "How many of you have abandoned using a dashboard because it was too complex?" (engage audience early)
:::

## It Doesn't Have To Be This Way {.center}

<br>

::: {.r-fit-text}
By shifting the focus from <span style="color:#d55e00">**cramming data**</span> to <span style="color:#009e73">**crafting stories**</span>
:::

:::: {.columns .fragment}
::: {.column width="60%"}
<br>

SoundPulse's market research team was drowning in data, unable to extract meaningful insights from their complex dashboards.
:::

::: {.column width="40%"}
<br>

![](img/soundpulse-logo.png){width="100%"}
:::
::::

::: {.notes}
**Transition to Solution**: Shift to a hopeful, inspiring tone here.

- The central thesis of our talk: storytelling vs. data dumping
- Introduce SoundPulse as our case study - they're a composite client...competitor of Spotify
- Their market research team needed to present competitor analysis to executives
- Emphasize that this shift is both attitudinal and technical
- Preview: "We'll show you exactly how this transformation works using real code examples"
- When the GIF appears, pause briefly - people will laugh at the "drowning in paper" visual
:::

## BID In Action: Dashboard Transformation {.center background-color="#f2f2f2"}

::: {.absolute top="80%" left="12%" width="80%"}
![](img/before-bid.png)
:::

::: {.notes}
**Show Impact**: Build up intuition of annoyance/frustration using "before" dashboard.

- Even thought SoundPulse is a composite client...this UI is actually a fair representation of what many of our market research clients have come to expect from their dashboards
  * We didn't just pick the worst dashboard we could find...we again, put a composite together to give you a representative idea of the kinds of challenges we've faced as devs trying to help our clients with the products we deliver
- Walk through the key issues with the "before" dashboard:
  * "Look at all those filters - users had to make decisions before seeing ANY data"
  * 8 tabs of dense data tables...need to know what you want to figure out in advance
  * "No guidance on where to start - cognitive overload from the beginning"
  * No one wants to use a dashboard like this...and no one will...UIs like this are a major contributor to dashboard rot
:::

## Behavior Insight Design (BID) Framework {background-color="#e6f0ff"}

::: {.absolute left="7%" width="90%"}
![](img/bid-framework.png)
:::

:::: {.columns .absolute top="58%"}

::: {.column width="27%"}
1. **Notice** the Problem
:::

::: {.column width="46%"}
2. **Interpret** the User's Need
3. **Structure** the Dashboard
4. **Anticipate** User Behavior
:::

::: {.column width="27%"}
5. **Validate** & Empower the User
:::

::::

::: {.notes}
**Framework Introduction**: Slow down here - this is the core methodology.

- The 5 stages form an acronym: NISAV (pronounced "knee-sav")
- Each stage builds on psychological principles but translates to practical actions
- Emphasize this isn't just theory - it's a practical workflow for developers
- Preview: "We'll walk through each stage with SoundPulse's case study"
- Mention these are iterative, not strictly linear - you can revisit earlier stages
- Personal anecdote: "We developed this framework after seeing the same patterns of dashboard failure across industries"
:::

## Where BID Fits In {background-color="#f2f2f2"}

::: {.d-flex .align-items-center}
![](img/newton-portrait.jpg){width="15%" style="float:left; margin-right:15px;"}

> "If I have seen further, it is by standing on the shoulders of giants."
>
> — Isaac Newton
:::

:::: {.columns}

::: {.column}
- **UX Design**: Beyond heuristic lists to guided process
- **Data Storytelling**: From data dumps to meaningful narratives
:::

::: {.column}
- **Psychological Science**: Evidence-based cognitive principles
- **Visual Communication**: Optimized for information perception
:::

::::

::: {.notes}
**Context Setting**: Position the framework within the broader field.

- Acknowledge that this builds on existing work - "We're standing on the shoulders of giants"
- Emphasize the unique integration of fields - psychology, UX, data & visual communication
  * Quickly mention some influences: "Edward Tufte's data visualization principles, Kahneman's work on cognitive biases, etc."
- Key difference from other approaches: process-oriented vs. checklist approach
- "What makes BID different is that it's specifically designed for analytic applications (like dashboards)"
  * The ultimate goal of the BID framework is to helping end users gain clearer insights from dashboards...while giving developers a structured approach to building more effective applications
:::

## SoundPulse Case Study: BID Stages 1-3 {background-color="#f9f9f9"}

:::: {.columns .nonincremental .r-fit-text}

::: {.column width="32%"}
- <span style="color:#1c6d7d">**Stage 1: Notice**</span>
  * Complex filtering overwhelmed users (*Cognitive Load*)
  * 72% users reported confusion (*Hick's Law*)
:::

::: {.column width="32%"}
- <span style="color:#35a4ae">**Stage 2: Interpret**</span>
  * Intuitive visualizations (*Processing Fluency*)
  * Clearer key insights<br>(*Data Storytelling*)
:::

::: {.column width="32%"}
- <span style="color:#ff9000">**Stage 3: Structure**</span>
  * Group related elements (*Principle of Proximity*)
  * Prioritization of metrics (*Dual-Processing Theory*)
:::

::::

::: {.absolute bottom="15%" left="15%" width="70%" height="30%"}
![](img/bid-framework.png)
:::

::: {.notes}
**Case Study Introduction:**

- "So...let's take a look at how we used this framework to help SoundPulse refactor their dashboard."
- **Stage 1 (Notice):** The first thing we noticed...as I'm sure you all of you did as well...was that users were overwhelmed with options - dropdown menus and complex tables
  * This is what we call 'cognitive load' - when the brain gets overtaxed with information.
  * We also identified a violation of Hick's Law, which simply means that more choices lead to longer decision times and confusion.
- **Stage 2 (Interpret):** Once we identified these issues, we focused on something called 'Processing Fluency' - making information easier to digest.
  * This meant using color-coding and visual patterns that the brain can process instantly without conscious effort.
  * You'll see in our code examples in a moment just how we implemented this with color scales in reactable.
- **Stage 3 (Structure):** "We then restructured using the 'Principle of Proximity' - which is a fancy way of saying we started grouping related elements. 
  * Now there are a ton of ways you can do this
  * As you'll see in our code example, we redesigned the layout to visually group metrics that belong together, and highlight the metrics that mattered most to create a natural flow through the data
- Now you don't need to know all of these concepts to use the framework...we'll come back to that
  * Don't need to be a psychologist to use the framework
- But first Milena is going to show you *how* we translated these concepts into code...
:::

## {reactable} Implementation: Visual Result {background-color="#f9f9f9"}

::: {.r-stack style="text-align:center"}
![](img/reactable-ex1.png){width="100%"}

![](img/reactable-ex2.png){.fragment width="100%"}

![](img/reactable-ex3.png){.fragment width="100%"}

![](img/reactable-ex4.png){.fragment width="100%"}

![](img/reactable-ex5.png){.fragment width="100%"}
:::

::: {.notes}
**Visual Impact**: Connect UI to stages/concepts just mentioned.

- "Here's what our reactable implementation looks like in practice"
- For each image as it appears:
  * First image: "Notice how the grouped bars implement Stage 1 principles by reducing cognitive load"
  * Second image: "The dynamic legend addresses Hick's Law by simplifying choices"
  * Third image: "Color coding enhances processing fluency from Stage 2"
  * Fourth image: "The grouping clearly implements the Principle of Proximity from Stage 3"
- "Each of these visual elements directly ties to a principle from the BID framework"
- "This is the power of intentional design - every element has a psychological purpose"
:::

## {reactable} Implementation: Basics {background-color="#f9f9f9"}

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "4-5|6-18|19-23"

# Packages: reactable, dplyr, bslib
reactable(
  soundpulse_data,
  # Stage 1: Reduce cognitive load with grouped structure
  groupBy = "Song",
  # Stage 2: Enhance processing fluency with color coding
  columns = list(
    `Metric 1` = colDef(
      style = function(value) {
        # Color coding for instant comprehension
        case_when(
          value > 60 ~ list(background = "#1c6d7d", color = "white"),
          value > 40 ~ list(background = "#35a4ae", color = "white"),
          TRUE ~ list(background = "#ffca90", color = "black")
        )
      }
    )
  ),
  # Stage 1: Progressive disclosure reduces overload
  details = function(index) {
    song_details <- filter(details_data, song_id == soundpulse_data$Song[index])
    card(reactable(song_details, outlined = TRUE))
  }
)
```

::: {.notes}
**Basic Implementation**: Start with the foundational elements.

- "Let's break down the simplest implementation of BID principles in reactable"
- **WOW MOMENT #1**: "The groupBy parameter does double duty here - it addresses cognitive load from Stage 1 while creating visual hierarchy for Stage 3"
- "Color coding isn't just for aesthetics - it directly implements processing fluency from Stage 2"
- "Notice how the conditional styling creates instant visual cues for good and concerning metrics"
- "This simple implementation already reduces cognitive load and enhances processing - but we can do more"
- Transition: "Now let's add more advanced features to handle Stage 3 principles..."
:::

## {reactable} Implementation: Advanced {background-color="#f9f9f9"}

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "4-14|15-49"

# Packages: reactable, dplyr, bslib
reactable(
  soundpulse_data,
  # Stage 3: Group related elements (Principle of Proximity)
  columnGroups = list(
    colGroup(
      name = "Core Metrics",
      columns = c("Metric 1", "Metric 2", "Metric 3", "Metric 4")
    ),
    colGroup(
      name = "Key Performance",
      columns = c("KPI 1", "KPI 2", "KPI 3")
    )
  ),
  # Stage 1: Dynamic legend reduces choice complexity (Hick's Law)
  defaultColDef = colDef(
    header = function(value) {
      layout_inline(
        value,
        span(
          style = css(
            display = "inline-block",
            margin_left = "5px",
            height = "10px", 
            width = "10px",
            border_radius = "50%",
            background_color = "#1c6d7d"
          )
        )
      )
    }
  ),
  # Combine multiple visual elements for age groups
  columns = list(
    Age = colDef(
      cell = function(value) {
        colors <- c(
          "18-24" = "#1c6d7d",
          "25-34" = "#35a4ae", 
          "35-44" = "#98d3ca",
          "45-54" = "#ffca90",
          "55-64" = "#1c6d7d",
          "65-74" = "#dd8500"
          )
        
        span(value, style = css(color = colors[value], font_weight = "bold"))
      }
    )
  )
)
```

::: {.notes}
**Advanced Features**: Highlight sophisticated techniques.

- "Now we're implementing more advanced BID principles with reactable"
- **WOW MOMENT #2**: "The columnGroups feature implements Dual-Processing Theory by separating quick insights (System 1) from detailed analysis (System 2)"
- "The create_bar_chart_cell function creates custom HTML for enhanced bar charts with tooltips"
- **WOW MOMENT #3**: "Progressive disclosure with the details parameter is one of the most powerful cognitive load reduction techniques - users only see the details when they need them"
- "This nested reactable implementation lets users drill down into detailed data without being overwhelmed"
- "All of these features work together to create a dashboard that respects how humans actually process information"
- Ask audience: "How many of you have used columnGroups or details in reactable?" (interactive moment)
- Transition: "Now let's see how these principles look in the final implementation..."
:::

## SoundPulse Case Study: BID Stages 4-5 {background-color="#f9f9f9"}

:::: {.columns .nonincremental .r-fit-text}

::: {.column width="48%"}
- <span style="color:#ffca90">**Stage 4: Anticipate**</span>
  * Executives comparing metrics without context (*Anchoring Effect*)
  * Teams interpreting data differently (*Confirmation Bias*)
  * Different perspectives needed for different teams (*Framing & Loss Aversion*)
:::

::: {.column width="48%"}
- <span style="color:#98d3ca">**Stage 5: Validate**</span>
  * Teams needed actionable summaries (*Peak-End Rule*)
  * No clear path to consensus<br>(*Cooperation & Coordination*)
:::
::::

::: {.absolute bottom="15%" left="15%" width="70%" height="30%"}
![](img/bid-framework.png)
:::

::: {.notes}
**Later stages:** Setup for echarts examples

- "For the later stages of the BID framework, we addressed more subtle psychological factors that affect how users interpret and act on data."
- **Stage 4 (Anticipate):** "We noticed executives were making flawed comparisons without proper context.
  * This relates to the 'Anchoring Effect' - where people rely too heavily on the first piece of information they see
  * As you'll see in our echarts4r example, we added dynamic benchmark lines to provide meaningful context
  * We also implemented a 'Framing Toggle' to address how different teams focus on different perspectives on the same data."
- **Stage 5 (Validate):** "Finally, we applied the 'Peak-End Rule' - the principle that people judge experiences mainly by their most intense point and how they end.
  * Our code example shows how we created summary cards that highlight key takeaways, ensuring users walk away with the most important insights."
- Let's take a closer look at that code now...
:::

## {echarts4r} Implementation: Visual Result {background-color="#f9f9f9"}

::: {.r-stack style="text-align:center"}
![](img/echarts4r-ex1.png){width="75%"}

![](img/echarts4r-ex2.png){.fragment width="75%"}

![](img/echarts4r-ex3.png){.fragment width="75%"}

![](img/echarts4r-ex4.png){.fragment width="75%"}
:::

::: {.notes}
**Complete Dashboard**: Show the integrated result.

- "Here's the complete dashboard implementing multiple BID principles with echarts4r"
- For each image as it appears:
  * First image: "The gauge charts provide instant comprehension while reference lines provide anchoring"
  * Second image: "The framing toggle allows different perspectives on the same data"
  * Third image: "The summary cards implement the Peak-End Rule from Stage 5"
- "Notice how the consistent visual design implements the Beautiful-Is-Good Stereotype from Stage 5"
- "The card-based layout creates clear visual hierarchy and reduces cognitive load"
- "Every element in this dashboard has a specific psychological purpose"
- "This is what we mean by behavior-informed design - intentional choices based on how humans think"
- Transition: "Now let's look at how framing affects decision-making in more detail..."
:::

## {echarts4r} Implementation: Gauge Chart {background-color="#f9f9f9"}

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "2-21|23-30"

# Packages: echarts4r, bslib
# Create intuitive gauge chart (Stage 2: Processing Fluency)
create_gauge_chart <- function(value, title) {
  e_charts() |>
    e_title(title) |>
    e_gauge(
      value,
      startAngle = 180,
      endAngle = 0,
      detail = list(formatter = "{value}%"),
      axisLine = list(
        lineStyle = list(
          color = list(
            c(value/100, "#1c6d7d"),  # Filled portion
            c(1, "#e9e9e9")           # Empty portion
          ),
          width = 30
        )
      )
    )
}

# Usage in dashboard (or use purrr::map)
layout_column_wrap(
  width = 1 / 4,
  create_gauge_chart(mean(music_data$`Metric 1`), "Metric 1"),
  create_gauge_chart(mean(music_data$`Metric 2`), "Metric 2"),
  create_gauge_chart(mean(music_data$`Metric 3`), "Metric 3"),
  create_gauge_chart(mean(music_data$`Metric 4`), "Metric 4")
)
```

::: {.notes}
**Gauge Charts**: Start with visually impactful elements.

- "Let's start with gauge charts that implement processing fluency principles from Stage 2"
- **WOW MOMENT #5**: "The e_gauge function creates visually intuitive displays that are instantly comprehensible"
- "Notice how we're customizing the gauge to eliminate unnecessary elements like the pointer"
- "The color gradient visually reinforces the value - showing progress as filled area"
- "Custom tooltips provide additional context to mitigate confirmation bias from Stage 4"
- "This function encapsulates a reusable pattern that we can apply consistently across metrics"
- "The visual simplicity of gauges reduces cognitive load while maintaining information richness"
- Transition: "Now let's add reference benchmarks to address the Anchoring Effect..."
:::

## {echarts4r} Implementation: Context {background-color="#f9f9f9"}

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "2-21|23-29"

# Packages: echarts4r, bslib
# Create benchmark bar (Stage 4: Anchoring Effect)
create_benchmark_bar <- function(value, title, benchmark = 50) {
  e_charts() |>
    e_title(title) |>
    e_bar(
      value,
      legend = list(show = FALSE),
      showBackground = TRUE,
    ) |>
    e_flip_coords() |>
    e_labels(position = "inside") |>
    e_y_axis(show = FALSE) |>
    e_x_axis(show = FALSE, min = 0, max = 100) |>
    e_hide_grid_lines() |>
    e_mark_line(
      data = list(yAxis = benchmark),
      lineStyle = list(color = "#dd8500", type = "dashed", width = 2),
      label = list(show = TRUE, formatter = "Benchmark")
    )
}

# Usage in dashboard (or use purrr::map)
layout_columns(
  width = 1 / 3,
  card(create_benchmark_bar(mean(music_data$popularity), "Popularity")),
  card(create_benchmark_bar(mean(music_data$danceability), "Danceability")),
  card(create_benchmark_bar(mean(music_data$energy), "Energy"))
)
```

::: {.notes}
**Reference Lines**: Highlight the Anchoring Effect implementation.

- "This code directly implements the Anchoring Effect principle from Stage 4"
- **WOW MOMENT #6**: "The e_mark_line feature provides visual reference points that anchor interpretation"
- "Without these reference lines, values like 65% or 45% have no context - are they good or bad?"
- "By providing benchmarks, we're giving users appropriate anchors for comparison"
- "Notice the styling choices - orange dashed line creates visual distinction from the data"
- "The tooltip provides additional context about the benchmark source"
- "This simple addition dramatically improves how users interpret the data"
- Transition: "Now let's look at our most sophisticated implementation - the framing toggle..."
:::

## {echarts4r} Implementation: Framing {background-color="#f9f9f9"}

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "2-3|6-12|14-20|23-24|25-40|42-43|45-59"

# Packages: shiny, echarts4r, dplyr, purrr, bslib
# UI with framing toggle (Stage 4: Framing & Loss Aversion)
ui <- fluidPage(
  titlePanel("SoundPulse Dashboard"),
  
  # Stage 4: Framing toggle
  radioButtons(
    "framing", "Framing:", 
    choices = c("Progress" = "progress", "Gap" = "gap"),
    selected = "progress",
    inline = TRUE
  ),
  
  # Layout for charts using programmatically generated outputs
  layout_column_wrap(
    width = 1 / 3,
    card(echarts4rOutput("chart_popularity")),
    card(echarts4rOutput("chart_danceability")),
    card(echarts4rOutput("chart_energy"))
  )
)

# Server logic
server <- function(input, output, session) {
  # Reactive expression for framed data
  framed_data <- reactive({
    soundpulse_data |>
      mutate(
        display_value = if_else(
          input$framing == "progress",
          value,
          abs(benchmark - value)
        ),
        title = if_else(
          input$framing == "progress",
          metric,
          paste0(metric, " Gap")
        )
      )
  })
  
  # Grab KPI column names
  kpi_col_names <- c("popularity", "danceability", "energy")
  
  # Generate all chart outputs dynamically
  walk(kpi_col_names, function(kpi_col) {
    output_id <- paste0("chart_", kpi_col)
    
    output[[output_id]] <- renderEcharts4r({
      metric_data <- filter(framed_data(), metric == kpi_col)
      
      # Function from previous slide
      create_benchmark_bar(
        metric_data$display_value,
        metric_data$title,
        metric_data$benchmark
      )
    })
  })
}
```

::: {.notes}
**Framing Toggle**: Demonstrate psychological impact of framing.

- "This is our most powerful implementation of a BID principle - the Framing Toggle"
- **WOW MOMENT #7**: "We're creating two different views of the same data to demonstrate how framing affects perception"
- "The 'Progress' frame emphasizes achievement - how far we've come"
- "The 'Gap' frame emphasizes what remains - how far we still need to go"
- "This directly implements the Framing & Loss Aversion principle from Stage 4"
- "The JavaScript allows users to switch between frames without a full page reload"
- "Different teams at SoundPulse used different frames - marketing used Progress, product used Gap"
- "This is a powerful example of how design choices influence decision-making"
- Interactive moment: "Let me show you how this works in practice..." (if possible, demonstrate live)
- Transition: "Now let's see how these elements come together in the complete dashboard..."
:::

## How Framing Affects Decision Making {background-color="#e6f0ff"}

:::: {.columns}

::: {.column .r-fit-text .fragment}
![](img/progress-frame.png){width="90%"}


::: {.nonincremental}
- **Progress (gain) Framing:**
  * Motivates by highlighting achievement
  * Creates positive momentum
  * Supports incremental improvement
:::
:::

::: {.column .r-fit-text .fragment}
![](img/gap-frame.png){width="90%"}

::: {.nonincremental}
- **Gap (loss) Framing:**
  * Creates urgency to address shortfall
  * Highlights areas needing improvement
  * May trigger risk-avoidance behaviors
:::
:::

::::

::: {.notes}
**Framing Effect**: Emphasize psychological impact.

- "This slide demonstrates the power of framing in action - same exact data, completely different psychological impact"
- "Progress framing creates motivation and highlights achievement - 'We're 65% there!'"
- "Gap framing creates urgency and focuses on what remains to be done - '35% still to go!'"
- "This psychological principle has been demonstrated in countless studies"
- "Present a 90% survival rate vs. a 10% mortality rate - people react completely differently"
- "At SoundPulse, this had real organizational impact"
    - Marketing team preferred progress framing for stakeholder presentations, while product teams found gap framing more actionable for development priorities.
- "Marketing needed to show progress to build confidence with stakeholders"
- "Product teams needed to focus on gaps to prioritize development resources"
- "The toggle feature meant both teams could use the same dashboard for different purposes"
- "This is why understanding psychological principles is so powerful for dashboard design"
- Interactive moment: "Think about your own dashboards - are you framing data in a way that drives the right decisions?"
- Transition: "Now let's talk about how we're making these principles accessible to every developer..."
:::

## From Framework to Workflow: {bidux} {.center background-color="#e6f0ff"}

:::: {.columns .r-fit-text}

::: {.column width="56%" .nonincremental .fragment}
- **Current Features (Phase 1):**
  * 📚 Concept browser
    * `bid_concept("processing fluency")`
  * 🧠 BID stage functions
    * `bid_notice()` to `bid_validate()`
:::

::: {.column width="42%" .nonincremental .fragment}
- **Coming Soon (Phases 2-4):**
  * 🤖 LLM Integration 
  * 🛠️ UI Component Library
  * 📊 Testing and Validation Tools
:::

::::

::: {.notes}
**Package Introduction**: Generate excitement about the tooling.

- "We're not just sharing a framework - we're building tools to make it easy to adopt"
- "We're excited to introduce `{bidux}`...our new R package currently in **Phase 1 development** that helps implement the BID framework with your workflows"
- "Our goal is to make these psychological principles accessible to every R developer"
- Current features focus on documentation and knowledge
- Future features will include ready-to-use UI components with BID principles built in
- "The LLM integration will let you describe what you want in plain language"
- "Think of {bidux} as your behavioral science assistant for Shiny app development"
:::

## What {bidux} Looks Like Today {background-color="#f9f9f9"}

```r
library(bidux)

# concept dictionary functionality
processing_fluency <- bid_concept("processing fluency")
print(processing_fluency)

# BID stage documentation functionality (piped workflow)
project_docs <- bid_notice(
  problem = "users overwhelmed by filtering options", 
  theory = "cognitive load theory", # use if wanting to apply specific concept; leave blank if unsure
  evidence = c("user feedback results", "dashboard telemetry data")
) |>
  bid_interpret(
    central_question = "How to simplify?",
    data_story = list(hook = "Too complex", context = "Many tabs")
  )
print(project_docs)
```

::: {.fragment}
More at: [github.com/jrwinget/bidux](https://github.com/jrwinget/bidux)
:::

::: {.notes}
**Code Example**: Show practical usage of the package.

- "The concept dictionary gives you instant access to behavioral principles"
  * "Each concept includes definition, code examples, and empirical evidence"
- "The stage documentation functions help structure your design thinking"
  * "These functions are designed to work together via pipes (cf, tidyverse)"
- "Documentation becomes part of your development process, not separate"
- Point out the commented future code to generate excitement
- "In Phase 2, you'll be able to ..."
- When the link appears: "We're launching this at ShinyConf today - check out the repo"
:::

## SoundPulse Results {.center background-color="#4682b4"}

:::: {.columns}
::: {.column width="50%"}
### Real-World Impact:

- Dramatically faster decision-making
- Substantial increase in insights per session
- Stakeholder satisfaction transformed from frustration to enthusiasm
- Significantly streamlined implementation of new metrics
:::

::: {.column width="50%" .fragment}
### Team Feedback:

"The BID framework transformed how we approach dashboards. What once took weeks of refinement now has clear direction from day one."

— Maya Chen, SoundPulse Research Director
:::
::::

::: {.notes}
**Results Summary**: Emphasize concrete benefits.

- These outcomes reflect consistent feedback across client organizations that have embraced our framework. The qualitative data tells a compelling story:
  * (PAUSE) Teams are making decisions with much greater speed and confidence
  * (PAUSE) Users are discovering more actionable insights in each session
  * (PAUSE) And perhaps most telling—stakeholders have shifted from being skeptical to becoming advocates
- We're currently building telemetry into our dashboards to gather more precise measurements...but the message from our users is already clear: this framework is changing how teams interact with their data
- When the testimonial appears: "This kind of transformation is what BID is all about"
- "Remember, this wasn't just visual changes - this was a fundamental shift in how our users...and developers...approached the dashboard"

- "While we didn't collect formal metrics before and after implementation, the qualitative feedback was tremendous. SoundPulse reported dramatically faster decision-making, more insights per session, and a complete transformation in stakeholder satisfaction - from frustration to enthusiasm."
:::

## Key Takeaways {.center background-color="#4682b4"}

::: {.nonincremental}
1. **BID** helps reduce friction and improve decisions
2. **`{reactable}` + `{echarts4r}`** help bring BID to life
3. **`{bidux}`** supports you in applying BID at every stage<br>(try it today!)
4. Build dashboards that guide — not fry — your users
:::

::: {.notes}
**Wrap-Up**: Reinforce key messages with energy.

- "BID is about reducing friction between users and insights"
- "The tools we've shown today - reactable and echarts4r - give you everything you need"
- "{bidux} is available now to help you get started - check out our GitHub"
- "Most importantly, remember this isn't just about pretty dashboards..."
- "It's about transforming how you and others make decisions with data"
- "Every dropdown you eliminate, every chart you clarify, helps someone make a better decision"
- "This is about making your users successful, not just making dashboards"
- Transition: "Thank you for your attention - we're excited to take your questions"
:::

## Thank You! {.center background-color="#4682b4"}

::: {.r-fit-text}
Questions?
:::

Milena Eickhoff & Jeremy Winget, PhD

::: {.notes}
**Q&A Setup**: Prepare for questions.

- Thank the audience sincerely
- Remind them of key resources: "Remember to check out the GitHub repo at github.com/bidux"
- "We'll be around after the session if you want to chat more"
- "We'd love to hear about your dashboard challenges and how BID might help"
- For common questions, prepare brief answers:
  * "How do you measure success?" → "Start with user testing and session analytics"
  * "Does this work for technical audiences?" → "Absolutely, technical users appreciate clarity too"
  * "How long does implementation take?" → "Start small - even one principle makes a difference"
- "Don't forget to follow us on LinkedIn/GitHub for updates on {bidux} development"
:::
